var toys: Transform[];


private var mainCamera: Camera;
private var offset: float = 1.0;
private var hitPoint: RaycastHit;
private var isDragging: boolean = false;
private var positionChange: boolean = false;
private var toy: Transform;
private var toysInBox: Transform[];
private var count: int = 0;
private var organizationScript: OrganizationActivitie;

function Start() {
	mainCamera = FindCamera();	
	toysInBox = new Transform[8];
	organizationScript = GameObject.Find("CasaDasBolhas").GetComponent(OrganizationActivitie);
}

/*function OnGUI() {
	GUI.Label(Rect(10,80,200,100),"mousePosition: "+Input.mousePosition);
}*/

function Update ()
{
	// We need to actually hit an object
	var hit : RaycastHit;
	var ray: Ray = mainCamera.ScreenPointToRay(Input.mousePosition);
	if (!Physics.Raycast(ray, hit, 100))
		return;
	Debug.DrawRay(mainCamera.transform.position, ray.direction* 10, Color.green);
	
	//ray = Camera.main.ScreenPointToRay (Input.mousePosition);
	//this.transform.localPosition = Camera.main.ScreenPointToRay (Input.mousePosition).GetPoint(3.8);


	if (!isDragging) {
		if ((hit.transform.tag == "RedToy") || (hit.transform.tag == "YellowToy") || (hit.transform.tag == "BlueToy") || (hit.transform.tag == "GreenToy")) {
			isDragging = true;
			hit.transform.localPosition = ray.GetPoint(2.0); //remover este e descomentar a linha abaixo
			//hit.transform.position = hit.point + offset * Vector3.up;
			toy = hit.transform;
			toy.gameObject.layer = 2;
			for (var i: int = 0; i < toys.length; i++) {
				toys[i].gameObject.layer = 2;				
			}
			//organizationScript.MakeBoxesIgnoreRaycast();
		}	
	}	
	if (isDragging) {
		if ((hit.transform.tag == "Floor") || (hit.transform.tag == "RedBox") || (hit.transform.tag == "YellowBox") || (hit.transform.tag == "BlueBox") || (hit.transform.tag == "GreenBox")) {
			//toy.position = hit.point + offset * Vector3.up;
			toy.position = ray.GetPoint(2.0); 
		}
		if ((hit.transform.tag == "RedBox") || (hit.transform.tag == "YellowBox") || (hit.transform.tag == "BlueBox") || (hit.transform.tag == "GreenBox")) {
			hit.transform.GetComponent(ToyOnFloor).CheckCollision(toy.GetComponent.<Collider>());
		}
	}
	/*if ((hit.transform.tag == "Floor") && (isDragging)) {	
		//toy.position = hit.point + offset * Vector3.up;
		toy.position = ray.GetPoint(2.0); 
	}*/		
}

function ReleaseObject(_name: String, pos: Vector3) {
	isDragging = false;
	//organizationScript.MakeBoxesDetectRaycast();
	for (var i: int = 0; i < toys.length; i++) {
		if (toys[i].name == _name) {
			toys[i].gameObject.layer = 2;
			toys[i].gameObject.tag = "Untagged";
			toys[i].position = pos;
			toysInBox[count] = toys[i];
			count++;
		}
		else {
			toys[i].gameObject.layer = 0;
		}		
	}
	for (var j: int = 0; j < count; j++) {
		toysInBox[j].gameObject.layer = 2;
	}
}
			
function FindCamera ()
{
	if (GetComponent.<Camera>())
		return GetComponent.<Camera>();
	else
		return Camera.main;
}