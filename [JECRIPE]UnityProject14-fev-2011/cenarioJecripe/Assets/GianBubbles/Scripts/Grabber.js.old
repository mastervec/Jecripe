private var ray : Ray;
private var InitialPosition: Vector3;
private var distance: float = 1.2;
private var WaterWasPlayed: boolean = false;
private var SoapWasPlayed: boolean = false;
private var LastPieceWasPlayed: boolean = false;

//private var grabberActive:boolean = false;

/*function MakeGrabberActive(_state:boolean)
{
	grabberActive = _state;
}*/

function Start() 
{
	InitialPosition = this.transform.localPosition;
}

function Update()
{
	if (BBPiecesController.isDraggingWater) {
		if (this.tag == "WaterBottle") {
			ray = Camera.main.ScreenPointToRay (Input.mousePosition);
			this.transform.position = Camera.main.ScreenPointToRay(Input.mousePosition).GetPoint(distance);
			this.transform.localPosition.y -= 0.4;
		}
	}	
	if (BBPiecesController.isDraggingSoap)	{
		if (this.tag == "SoapBottle") {
			ray = Camera.main.ScreenPointToRay (Input.mousePosition);
			this.transform.position = Camera.main.ScreenPointToRay(Input.mousePosition).GetPoint(distance);
			this.transform.localPosition.y -= 0.3;
		}
	}	
	if (BBPiecesController.isDraggingLastPiece) {	
		if (this.tag == "LastPiece") {
			ray = Camera.main.ScreenPointToRay (Input.mousePosition);
			this.transform.position = Camera.main.ScreenPointToRay(Input.mousePosition).GetPoint(distance);
			this.transform.localPosition.y += 0.05;
		}
	}
	//Debug.DrawRay(ray.origin,ray.direction*4.5, Color.green);	
}

function OnMouseOver() {
	if (enabled) {
		if (this.tag == "WaterBottle") {
			BBPiecesController.isDraggingWater = true;
			if ((!this.GetComponent(AudioSource).isPlaying) && (!WaterWasPlayed)){
				this.GetComponent(AudioSource).Play();
				WaterWasPlayed = true;
			}	
		}
		Debug.Log('grabber');
		Debug.Log((!BBPiecesController.isDraggingWater));
		Debug.Log((BBPiecesController.canDragSoapBottle));
		if ((!BBPiecesController.isDraggingWater) && (BBPiecesController.canDragSoapBottle)){
			if (this.tag == "SoapBottle"){			
				BBPiecesController.isDraggingSoap = true;
				if ((!this.GetComponent(AudioSource).isPlaying) && (!SoapWasPlayed)) {
					this.GetComponent(AudioSource).Play();
					SoapWasPlayed = true;
				}	
			}
			else if ((this.tag == "LastPiece") && (BBPiecesController.canDragLastPiece)) {
					BBPiecesController.isDraggingLastPiece = true;
					if ((!this.GetComponent(AudioSource).isPlaying) && (!LastPieceWasPlayed)){
						this.GetComponent(AudioSource).Play();
						LastPieceWasPlayed = true;
					}	
				}	
		}
	}	
}

/*function OnMouseDown()
{
	if (grabberActive)
	{
		//if ( ac.ObjetoDaVez == this.name )
		//{
			//ac.setCurrentDragingObject(this.name);
			
			ray = Camera.main.ScreenPointToRay (Input.mousePosition);
			this.transform.localPosition = Camera.main.ScreenPointToRay (Input.mousePosition).GetPoint(3.8);
			
			switch ( this.name )
			{
				case "Mamadeira":
				this.transform.localPosition.x -= 0.5;
				break;
				case "Chocalho":
				this.transform.localPosition.x += 1;
				break;
				case "Chupeta":
				break;
				case "Papinha":
				break;
				
			}
			this.transform.localPosition.x += 0.5;
			this.transform.localPosition.y -= 0.3;
	//		Debug.Log(ray);
		//}
	}
}
function OnMouseDrag()
{
	if (grabberActive)
	{
		ray = Camera.main.ScreenPointToRay (Input.mousePosition);
		this.transform.localPosition = Camera.main.ScreenPointToRay (Input.mousePosition).GetPoint(3.8);
		switch ( this.name )
		{
			case "Mamadeira":
			this.transform.localPosition.x -= 0.5;
			break;
			case "Chocalho":
			this.transform.localPosition.x += 1;
			break;
			case "Chupeta":
			break;
			case "Papinha":
			break;
			
		}
		this.transform.localPosition.x += 0.5;
		this.transform.localPosition.y -= 0.3;
	}
}

function OnMouseUp()
{
	if (grabberActive)
	{
		//if ( ac.ObjetoDaVez == this.name )
		//{
			//this.transform.localPosition.z = -3.5;
			
			this.transform.localPosition = InitialPosition;
			var hit : RaycastHit;
			if (Physics.Raycast (Camera.main.ScreenPointToRay(Input.mousePosition).origin,Camera.main.ScreenPointToRay(Input.mousePosition).direction*10, hit)) 
			{
				if (hit.transform.name == "Bebe")
				{
					Debug.Log("Soltou no bebe");
					//SoltouCerto();
				}
			}
			
		//}
	}
}

/*function SoltouCerto()
{
	if (grabberActive)
	{
		// Avisa para atividade controller q soltou certo objeto
		// AtividadeCrecheController faz:
			// Checa se terminou a atividade
			// Chama Animacao correta do bebe
			// Muda o objeto a ser pego
			// Starta a animaçao de apontar denovo se a atividade nao tiver completa
		//ac.ObjectDropped();	
			
		// Faz o Objeto sumir e aparecer em cima da mesa
		dummyOnChair.SetActiveRecursively(true);
		Destroy(gameObject);
	}
}*/

